name: Backend github action workflows

on: 
  workflow_dispatch:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'starter/backend/**'
defaults:
  run:
    working-directory: starter/backend
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: set up python 
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - name: cache pipenv
        id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ./starter/backend/.venv
          key: ${{ runner.os }}-${{ matrix.python-version }}-pipenv-${{ hashFiles('./starter/backend/Pipfile.lock') }}
      - name: install dependencies
        working-directory: ./starter/backend
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        env:
          PIPENV_VENV_IN_PROJECT: 1
        run: |
          pipenv install --dev
      - name: run lint
        working-directory: ./starter/backend
        run: |
          pipenv run lint     
        continue-on-error: false          

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: set up python 
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - name: cache pipenv
        id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ./starter/backend/.venv
          key: ${{ runner.os }}-${{ matrix.python-version }}-pipenv-${{ hashFiles('./starter/backend/Pipfile.lock') }}
      - name: install dependencies
        working-directory: ./starter/backend
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        env:
          PIPENV_VENV_IN_PROJECT: 1
        run: |
          pipenv install --dev
      - name: run lint
        working-directory: ./starter/backend
        run: |
          pipenv run test     
        continue-on-error: false      

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      -
        # Setting up Docker Buildx with docker-container driver is required
        # at the moment to be able to use a subdirectory with Git context
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:starter/backend"
          push: false
          tags: backend/ci

